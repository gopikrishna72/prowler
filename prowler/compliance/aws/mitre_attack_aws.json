{
  "Framework": "MITRE-ATTACK",
  "Version": "",
  "Provider": "AWS",
  "Description": "MITRE ATT&CKÂ® is a globally-accessible knowledge base of adversary tactics and techniques based on real-world observations. The ATT&CK knowledge base is used as a foundation for the development of specific threat models and methodologies in the private sector, in government, and in the cybersecurity product and service community.",
  "Requirements": [
    {
      "Name": "Exploit Public-Facing Application",
      "Id": "T1190",
      "Tactics": [
        "Initial Access"
      ],
      "SubTechniques": [],
      "Platforms": [
        "Containers",
        "IaaS",
        "Linux",
        "Network",
        "Windows",
        "macOS"
      ],
      "Description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.",
      "TechniqueURL": "https://attack.mitre.org/techniques/T1190/",
      "Checks": [
        "drs_job_exist",
        "config_recorder_all_regions_enabled",
        "rds_instance_minor_version_upgrade_enabled",
        "rds_instance_backup_enabled",
        "securityhub_enabled",
        "elbv2_waf_acl_attached",
        "guardduty_is_enabled",
        "inspector2_findings_exist"
      ],
      "Attributes": [
        {
          "AWSService": "AWS CloudEndure Disaster Recovery",
          "Category": "Respond",
          "Value": "Significant",
          "Comment": "AWS CloudEndure Disaster Recovery enables the replication and recovery of servers into AWS Cloud. In the event that a public-facing application or server is compromised, AWS CloudEndure can be used to provision an instance of the server from a previous point in time within minutes. As a result, this mapping is given a score of Significant."
        },
        {
          "AWSService": "AWS Config",
          "Category": "Protect",
          "Value": "Partial",
          "Comment": "The following AWS Config managed rules can identify configuration problems that should be fixed in order to ensure that applications intended for internal use cannot be accessed externally for exploitation: 'api-gw-endpoint-type-check' can ensure that Amazon API Gateway APIs are private and can only be accessed from within VPCs, 'elasticsearch-in-vpc-only' can ensure that Amazon ElasticSearch Service (Amazon ES) domains are in the same VPC and the domain endpoint is not public, 'lambda-function-public-access-prohibited' can verify that AWS Lambda functions are not publicly available, and 'ec2-instance-no-public-ip' can verify whether EC2 instances have public IP addresses. The following AWS Config managed rules can identify configuration problems that should be fixed in order to ensure that insecure applications are not installed and installed packages are kept updated, reducing the likelihood of adversary exploitation: the 'ec2-managedinstance-applications-blacklisted' managed rule verifies that a pre-defined list of applications are not installed on specified managed instances. It can be used to identify the presence of vulnerable applications (prompting removal before they can be exploited) and/or to identify the presence of allowed packages below a minimum version (prompting updates before they can be exploited). The 'ec2-managedinstance-platform-check' managed rule verifies that managed instances are running desired platform types, including using a desired version (as opposed to an out-of-date one). Both can reduce instances' attack surface for adversary exploitation. 'rds-automatic-minor-version-upgrade-enabled' can verify that Amazon RDS is being patched, and 'elastic-beanstalk-managed-updates-enabled' can verify that Elastic Beanstalk is being patched. Coverage factor is partial for these rules, since they are specific to a subset of the available AWS services that can be used to host public-facing applications and will only protect against certain forms of identifiable exploitation, resulting in an overall score of Partial."
        },
        {
          "AWSService": "AWS RDS",
          "Category": "Protect",
          "Value": "Partial",
          "Comment": "AWS RDS supports the automatic patching of minor versions of database instances. This can result in security flaws in the database instances being fixed before they can be exploited. This mapping is given a score of Partial because it does not protect against misconfigured database instances which may be susceptible to exploitation."
        },
        {
          "AWSService": "AWS RDS",
          "Category": "Respond",
          "Value": "Significant",
          "Comment": "AWS RDS supports the replication and recovery of database instances. In the event that a database instance is compromised, AWS RDS can be used to restore the database instance to a previous point in time. As a result, this mapping is given a score of Significant."
        },
        {
          "AWSService": "AWS GuardDuty",
          "Category": "Detect",
          "Value": "Minimal",
          "Comment": "There is a GuardDuty finding type that captures when vulnerable publicly facing resources are leveraged to capture data not intended to be viewable (e.g., IAM credentials associated with the resource). UnauthorizedAccess:EC2/MetadataDNSRebind - This finding type only detects MetadataDNSRebind and is more focused on the EC2 instance and not the application running on the instance itself resulting in Minimal coverage."
        },
        {
          "AWSService": "AWS Security Hub",
          "Category": "Detect",
          "Value": "Partial",
          "Comment": "AWS Security Hub reports on EC2 instances that are missing security patches for vulnerabilities which could enable an adversary to exploit vulnerabilities through the attack lifecycle. AWS Security Hub provides this detection with the following managed insight. EC2 instances that have missing security patches for important vulnerabilities. This is scored as Partial because the checks associated with Security Hub would only report on missing patches for known vulnerabilities. It doesn't not cover zero-day vulnerabilities."
        },
        {
          "AWSService": "AWS WAF",
          "Category": "Protect",
          "Value": "Significant",
          "Comment": "The AWS WAF protects public-facing applications against a range of vulnerabilities including those listed in the OWASP Top 10. AWS WAF provides this protection via the following rule sets that block malicious traffic across a variety of operating systems and applications. AWSManagedRulesCommonRuleSet AWSManagedRulesKnownBadInputRuleSet AWSManagedRulesSQLiRuleSet AWSManagedRulesLinuxRuleSet AWSManagedRulesUnixRuleSet AWSManagedRulesWindowsRuleSet AWSManagedRulesPHPRuleSet AWSManagedRulesWordPressRuleSet. This is given a score of Significant because it protects against vulnerabilities across multiple operating systems (Windows, Linux, POSIX) and technologies (JavaScript, SQL, PHP, WordPress). Furthermore, it blocks the malicious content in near real-time."
        },
        {
          "AWSService": "Amazon Inspector",
          "Category": "Protect",
          "Value": "Partial",
          "Comment": "Amazon Inspector can detect known vulnerabilities on various Windows and Linux endpoints. Furthermore, the Amazon Inspector Best Practices assessment package can assess security controls for 'Enable Address Space Layout Randomization (ASLR)' and 'Enable Data Execution Prevention (DEP)' that makes it more difficult for an attacker to exploit vulnerabilities in software. This information can be used to patch, isolate, and remove vulnerable software and endpoints. Amazon Inspector does not directly protect against exploitation and it is not effective against zero-day attacks, vulnerabilities with no available patch, and software that may not be analyzed by the scanner. As a result, the score is capped at Partial."
        }
      ]
    },
    {
      "Name": "Trusted Relationship",
      "Id": "T1199",
      "Tactics": [
        "Initial Access"
      ],
      "SubTechniques": [],
      "Platforms": [
        "Office 365",
        "IaaS",
        "Linux",
        "SaaS",
        "Windows",
        "macOS"
      ],
      "Description": "Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.",
      "TechniqueURL": "https://attack.mitre.org/techniques/T1199/",
      "Checks": [
        "ec2_networkacl_allow_ingress_any_port",
        "ec2_networkacl_allow_ingress_tcp_port_22",
        "ec2_networkacl_allow_ingress_tcp_port_3389"
      ],
      "Attributes": [
        {
          "AWSService": "Amazon Virtual Private Cloud",
          "Category": "Protect",
          "Value": "Partial",
          "Comment": "VPC network access control lists (NACLs) can isolate portions of the network that do not require network-wide access, limiting some attackers that leverage trusted relationships such as remote access for vendor maintenance. Coverage partial, Temporal Immediate."
        }
      ]
    },
    {
      "Name": "Valid Accounts",
      "Id": "T1078",
      "Tactics": [
        "Defense Evasion",
        "Persistence",
        "Privilege Escalation",
        "Initial Access"
      ],
      "SubTechniques": [
        "T1078.001 - Default Accounts",
        "T1078.004 - Cloud Accounts"
      ],
      "Platforms": [
        "Azure AD",
        "Containers",
        "Google Workspace",
        "IaaS",
        "Linux",
        "Network",
        "Office 365",
        "SaaS",
        "Windows",
        "macOS"
      ],
      "Description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.[1] Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.",
      "TechniqueURL": "https://attack.mitre.org/techniques/T1078/",
      "Checks": [
        "guardduty_is_enabled",
        "config_recorder_all_regions_enabled",
        "iam_administrator_access_with_mfa",
        "iam_avoid_root_usage",
        "iam_aws_attached_policy_no_administrative_privileges",
        "iam_customer_attached_policy_no_administrative_privileges",
        "iam_customer_unattached_policy_no_administrative_privileges",
        "iam_no_expired_server_certificates_stored",
        "iam_disable_30_days_credentials",
        "iam_no_root_access_key",
        "iam_no_custom_policy_permissive_role_assumption",
        "iam_password_policy_expires_passwords_within_90_days_or_less",
        "iam_password_policy_lowercase",
        "iam_password_policy_minimum_length_14",
        "iam_password_policy_number",
        "iam_password_policy_reuse_24",
        "iam_password_policy_symbol",
        "iam_password_policy_uppercase",
        "iam_policy_allows_privilege_escalation",
        "iam_policy_no_full_access_to_cloudtrail",
        "iam_policy_no_full_access_to_kms",
        "iam_role_cross_account_readonlyaccess_policy",
        "iam_role_cross_service_confused_deputy_prevention",
        "iam_root_hardware_mfa_enabled",
        "iam_root_mfa_enabled",
        "iam_rotate_access_key_90_days",
        "iam_user_hardware_mfa_enabled",
        "iam_user_mfa_enabled_console_access",
        "iam_user_no_setup_initial_access_key",
        "iam_user_two_active_access_key",
        "organizations_account_part_of_organizations",
        "organizations_delegated_administrators",
        "organizations_scp_check_deny_regions",
        "securityhub_enabled"
      ],
      "Attributes": [
        {
          "AWSService": "AWS GuardDuty",
          "Category": "Detect",
          "Value": "Partial",
          "Comment": "GuardDuty implements a finding that flags occurrences unattended behavior from an IAM User in the Account. PenTest:IAMUser/KaliLinux, PenTest:IAMUser/ParrotLinux, PenTest:IAMUser/PentooLinux, Policy:IAMUser/RootCredentialUsage, PrivilegeEscalation:IAMUser/AdministrativePermissions, UnauthorizedAccess:IAMUser/ConsoleLogin, UnauthorizedAccess:IAMUser/ConsoleLoginSuccess.B, UnauthorizedAccess:IAMUser/MaliciousIPCaller, UnauthorizedAccess:IAMUser/MaliciousIPCaller.Custom, UnauthorizedAccess:IAMUser/TorIPCaller, Policy:S3/AccountBlockPublicAccessDisabled, Policy:S3/BucketAnonymousAccessGranted, Policy:S3/BucketBlockPublicAccessDisabled, Policy:S3/BucketPublicAccessGranted, CredentialAccess:IAMUser/AnomalousBehavior, DefenseEvasion:IAMUser/AnomalousBehavior, Discovery:IAMUser/AnomalousBehavior, Exfiltration:IAMUser/AnomalousBehavior, Impact:IAMUser/AnomalousBehavior, Persistence:IAMUser/AnomalousBehavior, Recon:IAMUser/MaliciousIPCaller, Recon:IAMUser/MaliciousIPCaller.Custom, UnauthorizedAccess:IAMUser/InstanceCredentialExfiltration."
        },
        {
          "AWSService": "AWS Config",
          "Category": "Protect",
          "Value": "Minimal",
          "Comment": "This control provides significant coverage for one of this technique's SubTechniques, resulting in an overall score of Minimal."
        },
        {
          "AWSService": "AWS IAM",
          "Category": "Detect",
          "Value": "Partial",
          "Comment": "This control provides detection capability for one of this technique's SubTechniques and some of its procedure examples resulting in an overall Partial protection score."
        },
        {
          "AWSService": "AWS IAM",
          "Category": "Protect",
          "Value": "Partial",
          "Comment": "This control provides protection capability for one of this technique's SubTechniques and some of its procedure examples resulting in an overall Partial protection score."
        },
        {
          "AWSService": "AWS Single Sign-On",
          "Category": "Protect",
          "Value": "Partial",
          "Comment": "This control provides protection capability for one of this technique's SubTechniques and some of its procedure examples resulting in an overall Partial protection score."
        },
        {
          "AWSService": "AWS IoT Device Defender",
          "Category": "Detect",
          "Value": "Minimal",
          "Comment": "This control provides partial detection capability for one of this technique's SubTechniques and a few of its procedure examples resulting in an overall Minimal protection score."
        },
        {
          "AWSService": "AWS IoT Device Defender",
          "Category": "Protect",
          "Value": "Minimal",
          "Comment": "This control provides partial protection for one of this technique's SubTechniques and a few of its procedure examples resulting in an overall Minimal protection score."
        },
        {
          "AWSService": "AWS Organizations",
          "Category": "Protect",
          "Value": "Partial",
          "Comment": "This control may protect against malicious use of cloud accounts but may not mitigate exploitation of local, domain, or default accounts present within deployed resources."
        },
        {
          "AWSService": "AWS Security Hub",
          "Category": "Detect",
          "Value": "Minimal",
          "Comment": "AWS Security Hub detects suspicious activity by AWS accounts which could indicate valid accounts being leveraged by an adversary. AWS Security Hub provides these detections with the following managed insights. AWS principals with suspicious access key activity Credentials that may have leaked AWS resources with unauthorized access attempts IAM users with suspicious activity. AWS Security Hub also performs checks from the AWS Foundations CIS Benchmark and PCI-DSS security standard that, if implemented, would help towards detecting the misuse of valid accounts. AWS Security Hub provides these detections with the following checks. 3.1 Ensure a log metric filter and alarm exist for unauthorized API calls 3.2 Ensure a log metric filter and alarm exist for Management Console sign-in without MFA 3.3 Ensure a log metric filter and alarm exist for usage of root account 3.4 Ensure a log metric filter and alarm exist for IAM policy changes 3.6 Ensure a log metric filter and alarm exist for AWS Management Console authentication failures [PCI.CW.1] A log metric filter and alarm should exist for usage of the root user. By monitoring the root account, activity where accounts make unauthorized API calls, and changes to IAM permissions among other things, it may be possible to detect valid accounts that are being misused and are potentially compromised. This is scored as Minimal because it only supports a subset of the SubTechniques (1 of 4)."
        },
        {
          "AWSService": "Amazon Cognito",
          "Category": "Protect",
          "Value": "Minimal",
          "Comment": "This control provides partial protection for one of this technique's SubTechniques and a few of its procedure examples resulting in an overall Minimal protection score."
        }
      ]
    },
    {
      "Name": "Command and Scripting Interpreter",
      "Id": "T1059",
      "Tactics": [
        "Execution"
      ],
      "SubTechniques": [
        "T1059.009 - Cloud API"
      ],
      "Platforms": [
        "Azure AD",
        "IaaS",
        "Google Workspace",
        "Linux",
        "Network",
        "Office 365",
        "Windows",
        "macOS"
      ],
      "Description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.",
      "TechniqueURL": "https://attack.mitre.org/techniques/T1059/",
      "Checks": [
        "elbv2_waf_acl_attached"
      ],
      "Attributes": [
        {
          "AWSService": "AWS WAF",
          "Category": "Protect",
          "Value": "Partial",
          "Comment": "The AWS WAF protects web applications from injection attacks that leverage command and scripting interpreters. AWS WAF provides this protection via the following rule sets that block malicious traffic across a variety of operating systems and applications. AWSManagedRulesCommonRuleSet AWSManagedRulesSQLiRuleSet AWSManagedRulesUnixRuleSet AWSManagedRulesWindowsRuleSet AWSManagedRulesPHPRuleSet AWSManagedRulesWordPressRuleSet. This is given a score of Partial (instead of Minimal) because while it only protects against a subset of SubTechniques (3 out of 8), it does provide protections for command and scripting interpreters that do not have SubTechniques (SQL, PHP, etc.). Furthermore, it blocks the malicious content in near real-time."
        }
      ]
    },
    {
      "Name": "Serverless Execution",
      "Id": "T1648",
      "Tactics": [
        "Execution"
      ],
      "SubTechniques": [],
      "Platforms": [
        "IaaS",
        "Office 365",
        "SaaS"
      ],
      "Description": "Adversaries may abuse serverless computing, integration, and automation services to execute arbitrary code in cloud environments. Many cloud providers offer a variety of serverless resources, including compute engines, application integration services, and web servers.",
      "TechniqueURL": "https://attack.mitre.org/techniques/T1648/",
      "Checks": [
        "iam_aws_attached_policy_no_administrative_privileges",
        "iam_customer_attached_policy_no_administrative_privileges",
        "iam_policy_allows_privilege_escalation",
        "iam_policy_no_full_access_to_cloudtrail",
        "iam_policy_no_full_access_to_kms"
      ],
      "Attributes": [
        {
          "AWSService": "AWS IAM",
          "Category": "Protect",
          "Value": "Significant",
          "Comment": "Remove permissions to create, modify, or run serverless resources from users that do not explicitly require them."
        }
      ]
    },
    {
      "Name": "User Execution",
      "Id": "T1204",
      "Tactics": [
        "Execution"
      ],
      "SubTechniques": [
        "T1204.003 - Malicious Image"
      ],
      "Platforms": [
        "IaaS",
        "Containers",
        "Linux",
        "Windows",
        "macOS"
      ],
      "Description": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of Phishing.",
      "TechniqueURL": "https://attack.mitre.org/techniques/T1204/",
      "Checks": [
        "config_recorder_all_regions_enabled"
      ],
      "Attributes": [
        {
          "AWSService": "AWS Config",
          "Category": "Detect",
          "Value": "Minimal",
          "Comment": "This control provides significant coverage for one of this technique's SubTechniques, resulting in an overall score of Minimal."
        }
      ]
    },
    {
      "Name": "Account Manipulation",
      "Id": "T1098",
      "Tactics": [
        "Persistence"
      ],
      "SubTechniques": [
        "T1098.001 - Additional Cloud Credentials",
        "T1098.003 - Additional Cloud Roles",
        "T1098.004 - SSH Authorized Keys"
      ],
      "Platforms": [
        "IaaS",
        "Office 365",
        "SaaS"
      ],
      "Description": "Adversaries may manipulate accounts to maintain access to victim systems. Account manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials.",
      "TechniqueURL": "https://attack.mitre.org/techniques/T1098/",
      "Checks": [
        "config_recorder_all_regions_enabled",
        "iam_customer_attached_policy_no_administrative_privileges",
        "iam_policy_allows_privilege_escalation",
        "iam_policy_no_full_access_to_cloudtrail",
        "iam_policy_no_full_access_to_kms",
        "iam_administrator_access_with_mfa",
        "iam_avoid_root_usage",
        "iam_no_custom_policy_permissive_role_assumption",
        "iam_root_hardware_mfa_enabled",
        "iam_root_mfa_enabled",
        "iam_user_hardware_mfa_enabled",
        "iam_user_mfa_enabled_console_access",
        "guardduty_is_enabled",
        "securityhub_enabled"
      ],
      "Attributes": [
        {
          "AWSService": "AWS Config",
          "Category": "Protect",
          "Value": "Minimal",
          "Comment": "This control provides significant coverage for one of this technique's SubTechniques, resulting in an overall score of Minimal."
        },
        {
          "AWSService": "AWS IAM",
          "Category": "Detect",
          "Value": "Minimal",
          "Comment": "This control may generate logs for creation and manipulation of accounts but the relevant security information would be handled by another security control."
        },
        {
          "AWSService": "AWS Security Hub",
          "Category": "Detect",
          "Value": "Minimal",
          "Comment": "AWS Security Hub performs a check from the AWS Foundations CIS Benchmark that, if implemented, would help towards detecting the manipulation of accounts. AWS Security Hub provides this detection with the following check. 3.4 Ensure a log metric filter and alarm exist for IAM policy changes. This is scored as Minimal because it only supports a subset of the SubTechniques (1 of 4)."
        },
        {
          "AWSService": "AWS GuardDuty",
          "Category": "Detect",
          "Value": "Partial",
          "Comment": "GuardDuty has a finding types that flag events where an adversary may have compromised an AWS IAM User. Finding Type: Persistence:IAMUser/AnomalousBehavior."
        }
      ]
    },
    {
      "Name": "Create Account",
      "Id": "T1136",
      "Tactics": [
        "Persistence"
      ],
      "SubTechniques": [
        "T1136.003 - Cloud Account"
      ],
      "Platforms": [
        "Azure AD",
        "Google Workspace",
        "IaaS",
        "Linux",
        "Network",
        "Office 365",
        "Windows",
        "macOS"
      ],
      "Description": "Adversaries may create an account to maintain access to victim systems. With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",
      "TechniqueURL": "https://attack.mitre.org/techniques/T1136/",
      "Checks": [
        "config_recorder_all_regions_enabled"
      ],
      "Attributes": [
        {
          "AWSService": "AWS Config",
          "Category": "Protect",
          "Value": "Minimal",
          "Comment": "This control provides partial coverage for one of this technique's SubTechniques, resulting in an overall score of Minimal."
        }
      ]
    },
    {
      "Name": "Event Triggered Execution",
      "Id": "T1546",
      "Tactics": [
        "Privilege Escalation",
        "Persistence"
      ],
      "SubTechniques": [],
      "Platforms": [
        "Google Workspace",
        "IaaS",
        "Linux",
        "Office 365",
        "Windows",
        "macOS"
      ],
      "Description": "Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. Cloud environments may also support various functions and services that monitor and can be invoked in response to specific cloud events.",
      "TechniqueURL": "https://attack.mitre.org/techniques/T1546/",
      "Checks": [],
      "Attributes": []
    },
    {
      "Name": "Cloud Administration Command",
      "Id": "T1651",
      "Tactics": [
        "Privilege Escalation",
        "Persistence"
      ],
      "SubTechniques": [],
      "Platforms": [
        "Azure AD",
        "IaaS"
      ],
      "Description": "Adversaries may abuse cloud management services to execute commands within virtual machines or hybrid-joined devices. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. Similarly, in Azure AD environments, Microsoft Endpoint Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to the Azure AD.",
      "TechniqueURL": "https://attack.mitre.org/techniques/T1651/",
      "Checks": [],
      "Attributes": []
    },
    {
      "Name": "Implant Internal Image",
      "Id": "T1525",
      "Tactics": [
        "Persistence"
      ],
      "SubTechniques": [],
      "Platforms": [
        "IaaS",
        "Containers"
      ],
      "Description": "Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Unlike Upload Malware, this technique focuses on adversaries implanting an image in a registry within a victimâs environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.",
      "TechniqueURL": "https://attack.mitre.org/techniques/T1525/",
      "Checks": [
        "config_recorder_all_regions_enabled"
      ],
      "Attributes": [
        {
          "AWSService": "AWS Config",
          "Category": "Detect",
          "Value": "Minimal",
          "Comment": "The following AWS Config managed rules can identify running instances that are not using AMIs within a specified allow list: 'approved-amis-by-id' and 'approved-amis-by-tag', both of which are run on configuration changes. This does not provide detection of the image implanting itself, but does provide detection for any subsequent use of images that are implanted and not present within the allow list, resulting in a score of Minimal."
        }
      ]
    },
    {
      "Name": "Modify Authentication Process",
      "Id": "T1556",
      "Tactics": [
        "Credential Access",
        "Defense Evasion",
        "Persistence"
      ],
      "SubTechniques": [
        "T1556.006 - Multi-Factor Authentication",
        "T1556.007 - Hybrid Identity"
      ],
      "Platforms": [
        "Azure AD",
        "Google Workspace",
        "IaaS",
        "Linux",
        "Network",
        "Office 365",
        "Windows",
        "macOS"
      ],
      "Description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.",
      "TechniqueURL": "https://attack.mitre.org/techniques/T1556/",
      "Checks": [
        "iam_root_mfa_enabled",
        "iam_user_mfa_enabled_console_access",
        "iam_user_hardware_mfa_enabled",
        "iam_root_hardware_mfa_enabled"
      ],
      "Attributes": [
        {
          "AWSService": "AWS IAM",
          "Category": "Protect",
          "Value": "Partial",
          "Comment": "This control provides coverage for one of this technique's SubTechniques, resulting in an overall score of Partial. Enforce MFA in IAM Users."
        }
      ]
    },
    {
      "Name": "Impair Defenses",
      "Id": "T1562",
      "Tactics": [
        "Defense Evasion"
      ],
      "SubTechniques": [
        "T1562.006 - Disable or Modify Tools",
        "T1562.007 - Disable or Modify Cloud Firewall",
        "T1562.008 - Disable Cloud Logs"
      ],
      "Platforms": [
        "Containers",
        "IaaS",
        "Linux",
        "Network",
        "Office 365",
        "Windows",
        "macOS"
      ],
      "Description": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.",
      "TechniqueURL": "https://attack.mitre.org/techniques/T1562/",
      "Checks": [
        "config_recorder_all_regions_enabled",
        "securityhub_enabled",
        "guardduty_is_enabled",
        "inspector2_findings_exist"
      ],
      "Attributes": [
        {
          "AWSService": "AWS Config",
          "Category": "Detect",
          "Value": "Minimal",
          "Comment": "This control provides significant coverage for a minority of this technique's SubTechniques, resulting in an overall score of Minimal."
        },
        {
          "AWSService": "AWS IoT Device Defender",
          "Category": "Detect",
          "Value": "Minimal",
          "Comment": "This control provides partial coverage for a minority of this technique's SubTechniques, resulting in an overall score of Minimal."
        },
        {
          "AWSService": "AWS IoT Device Defender",
          "Category": "Respond",
          "Value": "Minimal",
          "Comment": "This control provides partial coverage for a minority of this technique's SubTechniques, resulting in an overall score of Minimal."
        }
      ]
    },
    {
      "Name": "Modify Cloud Compute Infrastructure",
      "Id": "T1578",
      "Tactics": [
        "Defense Evasion"
      ],
      "SubTechniques": [
        "T1578.001 - Create Snapshot",
        "T1578.002 - Create Cloud Instance",
        "T1578.003 - Delete Cloud Instance",
        "T1578.004 - Revert Cloud Instance"
      ],
      "Platforms": [
        "IaaS"
      ],
      "Description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.",
      "TechniqueURL": "https://attack.mitre.org/techniques/T1578/",
      "Checks": [
        "iam_aws_attached_policy_no_administrative_privileges",
        "iam_customer_attached_policy_no_administrative_privileges",
        "iam_policy_allows_privilege_escalation",
        "iam_policy_no_full_access_to_cloudtrail",
        "iam_policy_no_full_access_to_kms"
      ],
      "Attributes": [
        {
          "AWSService": "AWS IAM",
          "Category": "Protect",
          "Value": "Significant",
          "Comment": "Limit permissions for creating, deleting, and otherwise altering compute components in accordance with least privilege."
        }
      ]
    },
    {
      "Name": "Unused/Unsupported Cloud Regions",
      "Id": "T1535",
      "Tactics": [
        "Defense Evasion"
      ],
      "SubTechniques": [],
      "Platforms": [
        "IaaS"
      ],
      "Description": "Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure.",
      "TechniqueURL": "https://attack.mitre.org/techniques/T1535/",
      "Checks": [
        "organizations_scp_check_deny_regions"
      ],
      "Attributes": []
    },
    {
      "Name": "Use Alternate Authentication Material",
      "Id": "T1550",
      "Tactics": [
        "Defense Evasion",
        "Lateral Movement"
      ],
      "SubTechniques": [
        "T1550.001 - Application Access Token",
        "T1550.004 - Web Session Cookie"
      ],
      "Platforms": [
        "IaaS"
      ],
      "Description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.",
      "TechniqueURL": "https://attack.mitre.org/techniques/T1550/",
      "Checks": [
        "iam_administrator_access_with_mfa",
        "iam_customer_attached_policy_no_administrative_privileges",
        "iam_policy_allows_privilege_escalation",
        "iam_policy_no_full_access_to_cloudtrail",
        "iam_policy_no_full_access_to_kms",
        "iam_disable_30_days_credentials",
        "iam_no_root_access_key",
        "iam_root_hardware_mfa_enabled",
        "iam_root_mfa_enabled",
        "iam_rotate_access_key_90_days",
        "iam_user_hardware_mfa_enabled",
        "iam_user_mfa_enabled_console_access",
        "iam_user_no_setup_initial_access_key",
        "iam_user_two_active_access_key"
      ],
      "Attributes": [
        {
          "AWSService": "AWS IAM",
          "Category": "Protect",
          "Value": "Minimal",
          "Comment": "This control provides significant coverage for one of this technique's SubTechniques, resulting in an overall score of Minimal."
        }
      ]
    }
  ]
}
