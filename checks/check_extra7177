#!/usr/bin/env bash

# Prowler - the handy cloud security tool (copyright 2019) by Toni de la Fuente
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy
# of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.


CHECK_ID_extra7177="7.177"
CHECK_TITLE_extra7177="[extra7177] Publicly accessible EMR Cluster"
CHECK_SCORED_extra7177="NOT_SCORED"
CHECK_CIS_LEVEL_extra7177="EXTRA"
CHECK_SEVERITY_extra7177="High"
CHECK_ASFF_TYPE_extra7177="AwsEMR"
CHECK_ALTERNATE_extra7177="extra7177"
CHECK_SERVICENAME_extra7177="emr"
CHECK_RISK_extra7177='EMR Cluster should not be publicly accessible unless really neded'
CHECK_REMEDIATION_extra7177='Only make acceptable EMR clusters public'
CHECK_DOC_extra7177='https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-block-public-access.html'
CHECK_CAF_EPIC_extra7177='Infrastructure Security'

extra7177(){
    for regx in ${REGIONS}; do
        LIST_OF_CLUSTERS=$("${AWSCLI}" emr list-clusters $PROFILE_OPT --region "${regx}" --query 'Clusters[*].Id' --output text 2>&1)
        if grep -q -E 'AccessDenied|UnauthorizedOperation|AuthorizationError' <<< "${LIST_OF_CLUSTERS}"; then
            textInfo "${regx}: Access Denied trying to list clusters of emr" "${regx}"
            continue
        fi
        for cluster_id in ${LIST_OF_CLUSTERS}; do
            dns_val=$("${AWSCLI}" emr describe-cluster $PROFILE_OPT --cluster-id "${cluster_id}" --query 'Cluster.MasterPublicDnsName' --region "${regx}" --output text 2>&1)
            if grep -q -E 'AccessDenied|UnauthorizedOperation|AuthorizationError' <<< "${dns_val}"; then
                textInfo "${regx}: Access Denied trying to describe emr cluster" "${regx}" "${cluster_id}"
                continue
            fi
            if [[ $dns_val != None && $dns_val != *.internal ]];then
                master_node_sg=$("${AWSCLI}" emr describe-cluster --cluster-id "${cluster_id}" $PROFILE_OPT --region "${regx}" --query 'Cluster.Ec2InstanceAttributes.EmrManagedMasterSecurityGroup' --output text 2>&1)
                if grep -q -E 'AccessDenied|UnauthorizedOperation|AuthorizationError' <<< "${master_node_sg}"; then
                    textInfo "${regx}: Access Denied trying to describe emr cluster" "${regx}" "${cluster_id}"
                    continue
                fi
                SG_LIST=$("${AWSCLI}" ec2 describe-security-groups --group-ids "${master_node_sg}" --query 'SecurityGroups[?length(IpPermissions[?((FromPort==null && ToPort==null) || (FromPort==`0` && ToPort==`65535`)) && (contains(IpRanges[].CidrIp, `0.0.0.0/0`) || contains(Ipv6Ranges[].CidrIpv6, `::/0`))]) > `0`].{GroupId:GroupId}' $PROFILE_OPT --region $regx --output text 2>&1)
                if [[ $(echo "$SG_LIST" | grep -E 'AccessDenied|UnauthorizedOperation|AuthorizationError') ]]; then
                    textInfo "$regx: Access Denied trying to describe security groups" "$regx"
                    continue
                fi 
                if [[ $SG_LIST ]];then
                    for SG in $SG_LIST;do
                    textFail "${regx}: EMR Cluster publicly accessible ${cluster_id}" "${regx}" "${cluster_id}"
                    done
                else
                    textPass "${regx}: EMR Cluster not publicly accessible ${cluster_id}" "${regx}" "${cluster_id}"
                fi
            fi
        done
    done
}