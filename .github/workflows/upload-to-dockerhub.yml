name: upload-to-dockerhub

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '.github/**'
  release:
    types: [published]

env:
  DOCKER_HUB_REPOSITORY: ${{ secrets.DOCKER_HUB_REPOSITORY }}
  PUBLIC_ECR_REPOSITORY: ${{ secrets.PUBLIC_ECR_REPOSITORY }}
  PRO_ECR_REPOSITORY: ${{ secrets.PRO_ECR_REPOSITORY }}
  STG_ECR_REPOSITORY: ${{ secrets.STG_ECR_REPOSITORY }}
  AWS_REGION: us-east-1
  IMAGE_NAME: prowler

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to Public ECR
        uses: docker/login-action@v2
        with:
          registry: public.ecr.aws
          username: ${{ secrets.PUBLIC_ECR_AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.PUBLIC_ECR_AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
      -
        # Push to master branch - push "latest" tag
        name: Build and Push (latest)
        if: github.event_name == 'push'
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.DOCKER_HUB_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest, ${{ env.PUBLIC_ECR_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest, ${{ env.PRO_ECR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}, ${{ env.STG_ECR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}
          file: util/Dockerfile
      -
        # Push the new release
        name: Build and Push New Release
        if: github.event_name == 'release'
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.DOCKER_HUB_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}, ${{ env.PUBLIC_ECR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}, ${{ env.PRO_ECR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}, ${{ env.STG_ECR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}
          file: util/Dockerfile